openapi: 3.0.2
info:
  title: 'Commonground Registratie Component (CGRC)'
  version: 0.0.1
  description: |
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar. 
          
    Word lid van het slackkanaal [https://zaakonline.slack.com](https://zaakonline.slack.com) voor ondersteuning door het ontwikkel team. En krijg regelmatig updates over de ontwikkelingen op het gebied van de zaakonline componenten.
            
    Om het voor alle partijen zo makkelijk mogelijk te maken, stellen we zo veel mogelijk informatie over dit component openbaar beschikbaar.
    - [datamodel als pdf](/schema/datamodel.pdf)
    - [datamodel als mwb](/schema/datamodel.mwb)
    - [codebase op github]()
    - [codebase als zip](/archive/master.zip)
    - [docker container](/) 
    - [online demo]()
            
    
    Applicaties kunnen op deze API alleen wijzigingen uitvoeren waarvoor zij over de juiste rechten(scopes) beschikken. De op deze api beschikbare scopes zijn:
    - adres:schrijven
    - adres:lezen
    - adres:maken
    - adres:verwijderen   
                     
    Voor het gebruik van deze applicatie is een JWT Token nodig, deze hangt altijd vast aan een applicatie, ofwel user. Geldige JWT Tokens worden aangemaakt bij het registreren van een applicatie en kennen een beperkte houdbaarheid. 
    JWT Tokens kunnen zowel worden verlengd, als opnieuw worden aangevraagd, dit aan de hand van de applicatie id en sleutel.
    Let er bij het meegeven van JWT tokens op dat deze moet worden voorafgegaan door een Bearer en een spatie, onder de header Authorization. De volledig naam wordt daarmee: 'Authorization: Bearer [TOKEN]'.
    
paths:
  /a_p_is:
    get:
      tags:
        - API
      operationId: getAPICollection
      summary: 'Retrieves the collection of API resources.'
      responses:
        200:
          description: 'API collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/API-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
  '/a_p_is/{id}':
    get:
      tags:
        - API
      operationId: getAPIItem
      summary: 'Retrieves a API resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'API resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/API-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/API-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/API-read'
            application/json:
              schema:
                $ref: '#/components/schemas/API-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/API-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/API-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/API-read'
            text/html:
              schema:
                $ref: '#/components/schemas/API-read'
        404:
          description: 'Resource not found'
  /add:
    post:
      tags:
        - Component
      operationId: addComponentCollection
      summary: 'Creates a Component resource.'
      responses:
        204:
          description: 'Component resource created'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Component-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Component-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Component-write'
        description: 'The new Component resource'
  '/apis/{id}/refresh':
    post:
      tags:
        - API
      operationId: refreshAPIItem
      summary: 'Creates a API resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: 'API resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/API-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/API-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/API-read'
            application/json:
              schema:
                $ref: '#/components/schemas/API-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/API-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/API-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/API-read'
            text/html:
              schema:
                $ref: '#/components/schemas/API-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/API-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/API-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/API-write'
          application/json:
            schema:
              $ref: '#/components/schemas/API-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/API-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/API-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/API-write'
          text/html:
            schema:
              $ref: '#/components/schemas/API-write'
        description: 'The new API resource'
  /components:
    get:
      tags:
        - Component
      operationId: getComponentCollection
      summary: 'Retrieves the collection of Component resources.'
      responses:
        200:
          description: 'Component collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
  '/components/{id}':
    get:
      tags:
        - Component
      operationId: getComponentItem
      summary: 'Retrieves a Component resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Component resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
        404:
          description: 'Resource not found'
  '/components/{id}/refresh':
    post:
      tags:
        - Component
      operationId: refreshComponentItem
      summary: 'Creates a Component resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: 'Component resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Component-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Component-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Component-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Component-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Component-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Component-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Component-write'
        description: 'The new Component resource'
  '/organisation/{id}/refresh':
    post:
      tags:
        - Organisation
      operationId: refreshOrganisationItem
      summary: 'Creates a Organisation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        201:
          description: 'Organisation resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisation-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organisation-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organisation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organisation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organisation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organisation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organisation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organisation-write'
        description: 'The new Organisation resource'
  /organisations:
    get:
      tags:
        - Organisation
      operationId: getOrganisationCollection
      summary: 'Retrieves the collection of Organisation resources.'
      responses:
        200:
          description: 'Organisation collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-read'
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organisation-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
  '/organisations/{id}':
    get:
      tags:
        - Organisation
      operationId: getOrganisationItem
      summary: 'Retrieves a Organisation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Organisation resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organisation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organisation-read'
        404:
          description: 'Resource not found'
components:
  schemas:
    API-read:
      type: object
      description: 'An API'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          type: string
        name:
          readOnly: true
          type: string
        description:
          readOnly: true
          description: 'An short description of this API'
          type: string
        version:
          readOnly: true
          description: 'The current production version of this component'
          type: string
        logo:
          readOnly: true
          description: 'The logo for this component'
          type: string
        slug:
          readOnly: true
          type: string
        endpoint:
          readOnly: true
          type: string
        documentation:
          readOnly: true
          type: string
        component:
          readOnly: true
          description: 'The common ground component that this api provides'
          $ref: '#/components/schemas/Component-read'
        organisations:
          readOnly: true
          description: 'The organisations that provide this api'
          type: array
          items:
            $ref: '#/components/schemas/Organisation-read'
    API-write:
      type: object
      description: 'An API'
    Component-read:
      type: object
      description: 'A Component'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          type: string
        name:
          readOnly: true
          description: 'The name of this component'
          type: string
        description:
          readOnly: true
          description: 'An short description of this component'
          type: string
        logo:
          readOnly: true
          description: 'The logo for this component'
          type: string
        version:
          readOnly: true
          description: 'The current production version of this component'
          type: string
        slug:
          readOnly: true
          description: 'The slug for this component'
          type: string
        git:
          readOnly: true
          description: 'The link to the git repository for this component'
          type: string
        git_id:
          readOnly: true
          description: 'The git id for the repository for this component'
          type: string
        git_type:
          readOnly: true
          description: 'The git type for the repository for this component'
          type: string
        owner:
          readOnly: true
          description: 'The organisation that ownes this component (or better said it''s repository)'
          $ref: '#/components/schemas/Organisation-read'
        apis:
          readOnly: true
          description: 'The APIs provided by this component'
          type: array
          items:
            $ref: '#/components/schemas/API-read'
        organisations:
          readOnly: true
          description: 'The organisations that provide this component'
          type: array
          items:
            $ref: '#/components/schemas/Organisation-read'
    Component-write:
      type: object
      description: 'A Component'
    Organisation-read:
      type: object
      description: 'An Organisation'
      properties:
        id:
          description: 'The UUID identifier of this object'
          type: string
          format: uuid
          example: e2984465-190a-4562-829e-a8cca81aa35d
          readOnly: true
        name:
          description: 'The name of this organisation'
          type: string
          example: 'My Organisation'
          maxLength: 255
          required: true
          readOnly: true
        description:
          description: 'An short description of this organisation'
          type: string
          example: 'This is the best organisation ever'
          maxLength: 2550
          readOnly: true
        logo:
          description: 'The logo for this organisation'
          type: string
          format: url
          example: 'https://www.my-organisation.com/logo.png'
          maxLength: 255
          readOnly: true
        slug:
          description: 'The slug for this organisation'
          type: string
          example: my-organisation
          maxLength: 255
          readOnly: true
        git:
          readOnly: true
          description: 'The link to the git repository for this component'
          type: string
        git_id:
          readOnly: true
          description: 'The git id for the repository for this component'
          type: string
        components:
          readOnly: true
          description: 'The apis provided by this organisation'
          type: array
          items:
            $ref: '#/components/schemas/Component-read'
        apis:
          readOnly: true
          description: 'The components provided by this organisation'
          type: array
          items:
            $ref: '#/components/schemas/API-read'
    Organisation-write:
      type: object
      description: 'An Organisation'
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://cgrc.zaakonline.nl'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://cgrc.zaakonline.nl'
x-commonground:
  type: tool
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
